 int divide(int dividend, int divisor) {
	if(dividend==0x80000000&&divisor==-1) return 0x7fffffff;

	if((dividend!=0x80000000)&&(divisor==0x80000000)) return 0;
	if((dividend==0x80000000)&&(divisor==0x80000000)) return 1;

	int flag=((dividend>0&&divisor>0)||(dividend<0&&divisor<0))?1:0;
	int now1=0;

	if(dividend==0x80000000) {
		now1=1;
		dividend=0x7fffffff;
	} else dividend=abs(dividend);
	
	divisor=abs(divisor);
	int ans=0;
	int cnt=1;
 
	int now2=divisor;
	while(dividend>divisor) {
		if((divisor>>31)==-1) {
			divisor>>=1;
			cnt>>=1;
			divisor=divisor&0x7fffffff;
			cnt=cnt&0x7fffffff;
			break;
		}
		divisor=divisor<<1;
		cnt=cnt<<1;

	}
	while(dividend>=now2) {
		if(dividend>=divisor) {
			ans+=cnt;
			dividend-=divisor;
		}
		divisor=divisor>>1;
		cnt=cnt>>1;
	}
	if(now1&&(dividend+1)==now2) ans+=1;
	if(flag) return ans;
	else return -ans;
}
