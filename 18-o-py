class Solution(object):
    num_to_chars = {
        '2': ['a', 'b', 'c'],
        '3': ['d', 'e', 'f'],
        '4': ['g', 'h', 'i'],
        '5': ['j', 'k', 'l'],
        '6': ['m', 'n', 'o'],
        '7': ['p', 'q', 'r', 's'],
        '8': ['t', 'u', 'v'],
        '9': ['w', 'x', 'y', 'z'],
    }
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        if not digits:
            return []

        return self._helper(digits, "", [])
    
    def _helper(self, digits, s, r):
        if not digits:
            r.append(s)
            return 

        for c in self.num_to_chars[digits[0]]:
            self._helper(digits[1:], s + c, r)

        return r
